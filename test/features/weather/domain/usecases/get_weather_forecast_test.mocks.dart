// Mocks generated by Mockito 5.4.5 from annotations
// in weather_angel/test/features/weather/domain/usecases/get_weather_forecast_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_angel/core/error/failures.dart' as _i5;
import 'package:weather_angel/features/weather/domain/entity/weather_forecast_data.dart'
    as _i6;
import 'package:weather_angel/features/weather/domain/repositories/weather_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherForecastData>>
  getWeatherForecast({
    required int? nx,
    required int? ny,
    String? baseDate,
    String? baseTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getWeatherForecast, [], {
              #nx: nx,
              #ny: ny,
              #baseDate: baseDate,
              #baseTime: baseTime,
            }),
            returnValue: _i4.Future<
              _i2.Either<_i5.Failure, _i6.WeatherForecastData>
            >.value(
              _FakeEither_0<_i5.Failure, _i6.WeatherForecastData>(
                this,
                Invocation.method(#getWeatherForecast, [], {
                  #nx: nx,
                  #ny: ny,
                  #baseDate: baseDate,
                  #baseTime: baseTime,
                }),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.Failure, _i6.WeatherForecastData>
            >.value(
              _FakeEither_0<_i5.Failure, _i6.WeatherForecastData>(
                this,
                Invocation.method(#getWeatherForecast, [], {
                  #nx: nx,
                  #ny: ny,
                  #baseDate: baseDate,
                  #baseTime: baseTime,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.WeatherForecastData>>);
}
