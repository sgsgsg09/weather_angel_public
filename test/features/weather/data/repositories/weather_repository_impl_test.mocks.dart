// Mocks generated by Mockito 5.4.5 from annotations
// in weather_angel/test/features/weather/data/repositories/weather_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_angel/core/platform/network_info.dart' as _i7;
import 'package:weather_angel/features/weather/data/datasources/weather_local_data_source.dart'
    as _i6;
import 'package:weather_angel/features/weather/data/datasources/weather_remote_data_source.dart'
    as _i4;
import 'package:weather_angel/features/weather/data/mapper/kma_weather_mapper.dart'
    as _i8;
import 'package:weather_angel/features/weather/data/model/kma_weather_api_response_dto.dart'
    as _i2;
import 'package:weather_angel/features/weather/domain/entity/weather_forecast_data.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeKmaApiResponseDto_0 extends _i1.SmartFake
    implements _i2.KmaApiResponseDto {
  _FakeKmaApiResponseDto_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWeatherForecastData_1 extends _i1.SmartFake
    implements _i3.WeatherForecastData {
  _FakeWeatherForecastData_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeatherRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRemoteDataSource extends _i1.Mock
    implements _i4.WeatherRemoteDataSource {
  @override
  _i5.Future<_i2.KmaApiResponseDto> getWeatherForecastFromApi({
    required int? nx,
    required int? ny,
    String? baseDate,
    String? baseTime,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getWeatherForecastFromApi, [], {
              #nx: nx,
              #ny: ny,
              #baseDate: baseDate,
              #baseTime: baseTime,
            }),
            returnValue: _i5.Future<_i2.KmaApiResponseDto>.value(
              _FakeKmaApiResponseDto_0(
                this,
                Invocation.method(#getWeatherForecastFromApi, [], {
                  #nx: nx,
                  #ny: ny,
                  #baseDate: baseDate,
                  #baseTime: baseTime,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.KmaApiResponseDto>.value(
              _FakeKmaApiResponseDto_0(
                this,
                Invocation.method(#getWeatherForecastFromApi, [], {
                  #nx: nx,
                  #ny: ny,
                  #baseDate: baseDate,
                  #baseTime: baseTime,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.KmaApiResponseDto>);
}

/// A class which mocks [WeatherLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherLocalDataSource extends _i1.Mock
    implements _i6.WeatherLocalDataSource {
  @override
  _i5.Future<void> cacheWeatherForecast({
    required int? nx,
    required int? ny,
    required List<_i2.KmaItemDto>? dataToCache,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#cacheWeatherForecast, [], {
              #nx: nx,
              #ny: ny,
              #dataToCache: dataToCache,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.KmaItemDto>?> getLastWeatherForecast({
    required int? nx,
    required int? ny,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getLastWeatherForecast, [], {#nx: nx, #ny: ny}),
            returnValue: _i5.Future<List<_i2.KmaItemDto>?>.value(),
            returnValueForMissingStub:
                _i5.Future<List<_i2.KmaItemDto>?>.value(),
          )
          as _i5.Future<List<_i2.KmaItemDto>?>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i5.Future<bool> get isConnected =>
      (super.noSuchMethod(
            Invocation.getter(#isConnected),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);
}

/// A class which mocks [KmaWeatherMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockKmaWeatherMapper extends _i1.Mock implements _i8.KmaWeatherMapper {
  @override
  _i3.WeatherForecastData mapResponseDtoToDomain(
    _i2.KmaApiResponseDto? apiResponse,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#mapResponseDtoToDomain, [apiResponse]),
            returnValue: _FakeWeatherForecastData_1(
              this,
              Invocation.method(#mapResponseDtoToDomain, [apiResponse]),
            ),
            returnValueForMissingStub: _FakeWeatherForecastData_1(
              this,
              Invocation.method(#mapResponseDtoToDomain, [apiResponse]),
            ),
          )
          as _i3.WeatherForecastData);

  @override
  _i3.WeatherForecastData mapCachedItemsToDomain({
    required List<_i2.KmaItemDto>? cachedItems,
    required int? requestNx,
    required int? requestNy,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#mapCachedItemsToDomain, [], {
              #cachedItems: cachedItems,
              #requestNx: requestNx,
              #requestNy: requestNy,
            }),
            returnValue: _FakeWeatherForecastData_1(
              this,
              Invocation.method(#mapCachedItemsToDomain, [], {
                #cachedItems: cachedItems,
                #requestNx: requestNx,
                #requestNy: requestNy,
              }),
            ),
            returnValueForMissingStub: _FakeWeatherForecastData_1(
              this,
              Invocation.method(#mapCachedItemsToDomain, [], {
                #cachedItems: cachedItems,
                #requestNx: requestNx,
                #requestNy: requestNy,
              }),
            ),
          )
          as _i3.WeatherForecastData);
}
